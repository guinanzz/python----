python关键字
with 资源对象（文件 网络连接 ） as 名称:（上下文管理器）
离开with块后会自动关闭

None和其他任意数据类型比较的结果都是false

nonlocal关键字用来在函数或其他作用域中使用外层（非全局）变量

yield关键字用来返回一个生成器对象（记住函数上一次执行到的位置，下一次从下一行继续运行）

[]{}()中的多行语句不需要用\来换行

单行注释用#，多行注释用三个单引号或者三个双引号

标识符：字母、数字、下划线组成，不能以数字开头，不能是关键字

类的命名规则：首字母大写，驼峰命名法（驼峰命名法的意思是每个单词的首字母大写，其他字母小写，例如：CamelCase）

以单下划线开头的标识符是私有的，不应该被外部引用（仅能在类内使用）

python不需要声明变量类型，会根据赋值自动判断

del 可以删除变量，删除后不能再引用，除非再次赋值

python标准数据类型：Number（数字）、String（字符串）、List（列表）、Tuple（元组）、Set（集合）、Dictionary（字典）
不可变数据（Number、String、Tuple）：不允许变量的值发生变化，如果改变了变量的值，相当于是新建了一个对象
可变数据（List、Dictionary、Set）：允许变量的值发生变化，即如果对变量进行append、pop等操作后，只是改变了变量的值，而不是新建了一个对象

id():返回对象的内存地址

内置常量：False True None NotImplemented(未实现，函数无法处理输入)

字符串常用的函数：find strip split zfill

f-strings（格式化字符串字面量）：在字符串前加上f或F，使用大括号{}包含表达式，可以在字符串中嵌入变量值或表达式的结果，例如：f"Hello, {name}"

eval: 将字符串str当成有效的表达式来求值并返回计算结果

# 新增内容
lambda: 创建匿名函数，语法为 lambda 参数: 表达式

map: 对可迭代对象的每个元素执行指定函数，语法为 map(函数, 可迭代对象)

filter: 对可迭代对象的每个元素执行指定函数，并返回满足条件的元素，语法为 filter(函数, 可迭代对象)

reduce: 对可迭代对象的每个元素执行指定函数，并返回一个累计结果，语法为 reduce(函数, 可迭代对象)，需要导入 functools 模块

列表推导式: 使用简洁的语法创建列表，语法为 [表达式 for 变量 in 可迭代对象 if 条件]

字典推导式: 使用简洁的语法创建字典，语法为 {键: 值 for 变量 in 可迭代对象 if 条件}

集合推导式: 使用简洁的语法创建集合，语法为 {表达式 for 变量 in 可迭代对象 if 条件}

生成器表达式: 使用简洁的语法创建生成器，语法为 (表达式 for 变量 in 可迭代对象 if 条件)

装饰器: 用于修改函数或方法的行为，语法为 @装饰器函数名

上下文管理器: 使用 with 语句管理资源，确保在使用后正确释放资源，语法为 with 上下文管理器 as 变量:

异常处理: 使用 try except 语句捕获和处理异常，语法为
try:
    代码块
except 异常类型 as 变量:
    异常处理代码块
finally:
    清理代码块

模块导入: 使用 import 语句导入模块，语法为 import 模块名 或 from 模块名 import 成员

